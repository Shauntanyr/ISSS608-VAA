---
title: "In-class_Ex01"
author: "Shaun Tan"
date: "4/16/2023"
format:
  html:
    code-fold: true
    code-summary: "Show the code"
---

# Getting Started

## Installing and launching R packages

The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed on the computer. If they are, then they will be launched into R.

```{r}
pacman::p_load(tidyverse)
```

```{r setup, include=FALSE} 
knitr::opts_chunk$set(warning = FALSE, message = FALSE) 
```

## Importing the data

```{r}
exam_data <- read_csv("data/Exam_data.csv")
```

## About the data

The data in question is exam data for primary 3 students for the subjects: English, Math, and Science. In addition, the class and gender of each student is given.

# Plotting a simple horizontal bar chart

```{r}
ggplot(data = exam_data,
       aes(x = RACE)) + 
  geom_bar() +
  coord_flip() +
  theme_minimal() +
  theme(
    panel.background = element_rect(fill = "lightblue", colour = "lightblue", 
                                    size = 0.5, linetype = "solid"),
    panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = "white"), 
    panel.grid.minor = element_line(size = 0.25, linetype = 'solid', colour = "white")) +
  labs(title = "Horizontal Histogram of Exam Data")
```

# Designing Data-driven Graphics for Analysis I

## The original design

```{r}
ggplot(data = exam_data,
       aes(x = RACE)) + 
  geom_bar() +
  labs(x = "Race", y = "Count", title = "Histogram of Exam Data")
```

Critique of this histogram:

1.  y-aixs label is not clear (i.e. count).
2.  The bars are not sorted by their respective frequencie (i.e. ascending or descending order)
3.  For static graphs, additional information should be provided to each bar to allow the reader to get a better sense of the data at one glance.

## The makeover design

```{r}
ggplot(data = exam_data,
       aes(x=reorder(RACE,RACE,
                     function(x)-length(x)), fill = RACE)) + 
  geom_bar() +
  ylim(0,220) +
  geom_text(stat="count", 
      aes(label=paste0(..count.., ", ", 
      round(..count../sum(..count..)*100, 1), "%")),
      vjust=-1) +
  labs(x = "Race", y = "No. of\nPupils") +
  theme_grey() +
  theme(axis.title.y=element_text(angle = 0))
```
# Designing Data-driven Graphics for Analysis II

## The original design
```{r}
ggplot(data = exam_data,
       aes(x = MATHS)) + 
  geom_histogram(bins=20) +
  ylim(0,45)
  
```
Critique of this histogram:

1.  y-aixs label is not clear (i.e. count).
2.  Can't tell between each bar in the histogram
3.  There is no clear message that this histogram is looking to tell

## The makeover design

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS)) +
  geom_histogram(bins=20, 
                 color="black", 
                 fill="light blue") +
  geom_vline(aes(xintercept=mean(MATHS, na.rm=T)),
             color="red", 
             linetype="dashed", 
             size=1, label = "mean") +
  geom_vline(aes(xintercept=median(MATHS, na.rm=T)),
             color="grey30",
             linetype="dashed", 
             size=1) + annotate("text", x=75, y=40, label="Median", angle=90, size=3, color="grey30") +
             annotate("text", x=68, y=40, label="Mean", angle=90, size=3, color="red") + ylim(0,45) + labs(x = "Math Results", y = "No. of\nPupils") +
  theme_grey() +
  theme(axis.title.y=element_text(angle = 0))
```

# Designing Data-driven Graphics for Analysis III

## The original design

```{r}
ggplot(data=exam_data, aes(x = ENGLISH)) +
  geom_histogram(data = exam_data, fill = "darkgrey") +
  facet_wrap(~ GENDER) +
  guides(fill = FALSE) +  
  theme_bw() + labs(x = "English Results", y = "No. of\nPupils") +
  theme_grey() +
  theme(axis.title.y=element_text(angle = 0))
```
Critique of these 2 histogram:

1.  y-aixs label is not clear (i.e. count).
2.  There difference between male and female results is not apparent as there is no reference
3.  There is no clear message that these histograms are looking to tell

## The makeover design

```{r}
d <- exam_data   
d_bg <- d[, -3]  

ggplot(d, aes(x = ENGLISH, fill = GENDER)) +
  geom_histogram(data = d_bg, fill = "grey", alpha = .5) +
  geom_histogram(colour = "black") +
  facet_wrap(~ GENDER) +
  guides(fill = FALSE) +  
  theme_bw()
```
# Designing Data-driven Graphics for Analysis IV

## The original design

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point(size = 0.8) +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100))
```
Critique of this Scatterplot:

1.  Points are two small
2.  No relative reference point/line 
3.  There is no clear message that this histogram is looking to tell

## The makeover design

```{r}
ggplot(data=exam_data, 
       aes(x=MATHS, y=ENGLISH)) +
  geom_point() +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  geom_hline(yintercept=50,
             linetype="dashed",
             color="grey60",
             size=1) + 
  geom_vline(xintercept=50, 
             linetype="dashed",
             color="grey60",
             size=1) + annotate("text", x=14, y=5, label="Weak at both Subjects", angle=0, size=5, color="red") + annotate("text", x=85, y=100, label="Strong at both Subjects", angle=0, size=5, color="green") + annotate("text", x=85, y=5, label="Stronger at Maths", angle=0, size=5, color="orange") + annotate("text", x=14, y=100, label="Stronger at English", angle=0, size=5, color="orange") + 
  labs(x = "Math Results", y = "English Results")
```